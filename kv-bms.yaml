# This file is included in the main files that are installed on the ESP devices. This file does not need to be
# uploaded, it will be autmatically included.

# The ble_client component enables connections to Bluetooth Low Energy devices in order to query and control them. 
# This component does not expose any sensors or output components itself, but merely manages connections to them 
# for use by other components.
ble_client:
  - mac_address: ${mac_address}
    id: client${device}
    on_connect:
      then:
        - lambda: |-
            ESP_LOGD("${short_name} ${mac_address}", "Connected to BLE device");
    on_disconnect:
      then:
        - lambda: |-
            ESP_LOGD("${short_name} ${mac_address}", "Disconnected from BLE device");
            if (id(ble_client_switch${device}).state) {
              id(ble_client_switch${device}).turn_off();
              id(ble_client_switch${device}).turn_on();
            }

kilovault_bms_ble:
  - ble_client_id: client${device}
    id: bms${device}
    update_interval: 10s

# ESPHome has support for many different sensors. Each of them is a platform of the sensor domain and each sensor 
# has several base configuration options.
sensor:
  - platform: total_daily_energy
    name: "${short_name} Total Daily Energy battery in"
    power_id: charging_power${device}
    filters:
        - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy

  - platform: total_daily_energy
    name: "${short_name} Total Daily Energy battery out"
    power_id: discharging_power${device}
    filters:
        - multiply: 0.001
    unit_of_measurement: kWh
    device_class: energy

  - platform: kilovault_bms_ble
    kilovault_bms_ble_id: bms${device}

    voltage:                                    # VOLTAGE
      name: "${short_name} voltage"
      id: voltage${device}
      filters:
        - throttle_average: ${throttle_time}
        - filter_out: nan
      
    current:                                    # CURRENT
      name: "${short_name} current"
      id: current${device}
      filters:
        - throttle_average: ${throttle_time}
        - filter_out: nan
 
    power:                                      # POWER
      name: "${short_name} power"
      id: power${device}
      filters:
        - throttle_average: ${throttle_time}
        - filter_out: nan

    charging_power:                             # CHARGING POWER
      name: "${short_name} charging power"
      id: charging_power${device}
      filters:
        - throttle_average: ${throttle_time}
        - filter_out: nan
    discharging_power:                          # DISCHARGING POWER
      name: "${short_name} discharging power"
      id: discharging_power${device}
      filters:
        - throttle_average: ${throttle_time}
        - filter_out: nan
    cycles:                                     # CYCLES
      name: "${short_name} cycles"
      filters:
        - throttle: 60s
    state_of_charge:                            # STATE OF CHARGE
      name: "${short_name} state of charge"
      filters:
        - throttle: 60s
    total_capacity:                             # TOTAL_CAPACITY
      name: "${short_name} total capacity"
      filters:
        - throttle: 60s
    current_capacity:                           # CURRENT CAPACITY
      name: "${short_name} current capacity"
      filters:
        - throttle: 60s
    status:                                     # STATUS
      name: "${short_name} status"
      filters:
        - throttle: 60s
        - lambda: |-
            ESP_LOGD("${short_name} ${mac_address}", "Status changed to 0");
            if (x == 0) {
              id(ble_client_switch${device}).turn_off();
              id(ble_client_switch${device}).turn_on();
            }
            return x;
    afestatus:                                  # AFE STATUS
      name: "${short_name} afe status"
      filters:
        - throttle: 60s
    min_cell_voltage:                           # MINIMUM CELL VOLTAGE
      name: "${short_name} min cell voltage"
      filters:
        - throttle: 60s
    max_cell_voltage:                           # MAXIMUM CELL VOLTAGE
      name: "${short_name} max cell voltage"
      filters:
        - throttle: 60s
    min_voltage_cell:                           # MIN VOLTAGE CELL
      name: "${short_name} min voltage cell"
      filters:
        - throttle: 60s
    max_voltage_cell:                           # MAX VOLTAGE CELL
      name: "${short_name} max voltage cell"
      filters:
        - throttle: 60s
    delta_cell_voltage:                         # DELTA CELL VOLTAGE
      name: "${short_name} delta cell voltage"
      filters:
        - throttle: 60s
    temperature:                                # TEMPERATURE  
      name: "${short_name} temperature"
      filters:
        - throttle: 60s
    cell_voltage_1:                             # CELL VOLTAGE 1
      name: "${short_name} cell voltage 1"
      filters:
        - throttle_average: ${throttle_time}
        - filter_out: nan
    cell_voltage_2:                             # CELL VOLTAGE 2
      name: "${short_name} cell voltage 2"
      filters:
        - throttle_average: ${throttle_time}
        - filter_out: nan
    cell_voltage_3:                             # CELL VOLTAGE 3
      name: "${short_name} cell voltage 3"
      filters:
        - throttle_average: ${throttle_time}
        - filter_out: nan
    cell_voltage_4:                             # CELL VOLTAGE 4
      name: "${short_name} cell voltage 4"
      filters:
        - throttle_average: ${throttle_time}
        - filter_out: nan

# The switch domain includes all platforms that should show up like a switch and can only be turned ON or OFF.
switch:
  - platform: ble_client
    ble_client_id: client${device}
    id: ble_client_switch${device}
    name: "${short_name} enable bluetooth connection"

# Text sensors are a lot like normal sensors. But where the “normal” sensors only represent sensors that output 
# numbers, this component can represent any text.
text_sensor:
  - platform: kilovault_bms_ble
    kilovault_bms_ble_id: bms${device}
    battery_mac:
      name: "${short_name} battery MAC"
  - platform: kilovault_bms_ble
    kilovault_bms_ble_id: bms${device}
    message:
      name: "${short_name} message"
  